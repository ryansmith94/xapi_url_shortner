{"version":3,"sources":["token/server/KnexRepository.ts"],"names":[],"mappings":";;;;;;AAAA,mCAA2B,0BAA0B,CAAC,CAAA;AAEtD;IAAyB,8BAAc;IAErC,oBAAmB,MAAM,EAAE,UAAU;QACnC,kBAAM,MAAM,EAAE,UAAU,CAAC,CAAC;IAC5B,CAAC;IAES,oCAAe,GAAzB,UAA0B,KAAK;QAC7B,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,WAAW,EAAE,CAAC,MAAM,EAAE,CAAC;QAC7C,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,WAAW,EAAE,CAAC;QACvC,KAAK,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,WAAW,EAAE,CAAC;IACvC,CAAC;IAEM,gCAAW,GAAlB,UAAmB,KAAK;QACtB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG;YAC1D,MAAM,CAAC;gBACL,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;gBACV,KAAK,EAAE,KAAK,CAAC,KAAK;gBAClB,OAAO,EAAE,KAAK,CAAC,OAAO;gBACtB,MAAM,EAAE,KAAK,CAAC,MAAM;aACrB,CAAC;QACJ,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,oCAAe,GAAtB,UAAuB,KAAa;QAClC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,OAAO,EAAE,KAAK,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,KAAK;YACtE,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;gBACX,MAAM,IAAI,KAAK,CAAC,oCAAoC,CAAC,CAAC;YACxD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,KAAK,CAAC;YACf,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IACH,iBAAC;AAAD,CAjCA,AAiCC,CAjCwB,4BAAc,GAiCtC;AAED;kBAAe,UAAU,CAAC","file":"token/server/KnexRepository.js","sourcesContent":["import BaseRepository from '../../BaseKnexRepository';\n\nclass Repository extends BaseRepository {\n\n  public constructor(config, collection) {\n    super(config, collection);\n  }\n\n  protected constructSchema(table) {\n    table.increments('id').primary();\n    table.string('value').notNullable().unique();\n    table.integer('user_id').notNullable();\n    table.string('expiry').notNullable();\n  }\n\n  public createToken(token) {\n    return this.connect().insert(token, 'id').then(function (ids) {\n      return {\n        id: ids[0],\n        value: token.value,\n        user_id: token.user_id,\n        expiry: token.expiry\n      };\n    });\n  }\n\n  public getTokenByValue(value: string) {\n    return this.connect().where('value', value).first().then(function (token) {\n      if (!token) {\n        throw new Error('No token. Log out and log back in.');\n      } else {\n        return token;\n      }\n    });\n  }\n}\n\nexport default Repository;"],"sourceRoot":"/source/"}