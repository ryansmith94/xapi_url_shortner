{"version":3,"sources":["token/client/ReactCreateController.ts"],"names":[],"mappings":";;;;;;AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAE/B,IAAI,GAAG,GAAG,KAAK,CAAC,GAAG,CAAC;AACpB;IAAwB,6BAAyB;IAAjD;QAAwB,8BAAyB;QACxC,UAAK,GAAG;YACb,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IA+CJ,CAAC;IA9CS,+BAAW,GAAnB,UAAoB,KAAK;QACvB,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,WAAW,CAC5B,IAAI,CAAC,KAAK,CAAC,KAAK,EAChB,IAAI,CAAC,KAAK,CAAC,QAAQ,CACpB,CAAC,IAAI,CAAC,UAAU,KAAK;YACpB,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAClC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,UAAU,GAAG;YACzB,KAAK,CAAC,GAAG,CAAC,CAAC;QACb,CAAC,CAAC,CAAC;QACH,KAAK,CAAC,cAAc,EAAE,CAAC;IACzB,CAAC;IACO,qCAAiB,GAAzB,UAA0B,KAAK;QAC7B,IAAI,CAAC,QAAQ,CAAC,EAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;IAC7C,CAAC;IACO,wCAAoB,GAA5B,UAA6B,KAAK;QAChC,IAAI,CAAC,QAAQ,CAAC,EAAC,QAAQ,EAAE,KAAK,CAAC,MAAM,CAAC,KAAK,EAAC,CAAC,CAAC;IAChD,CAAC;IACO,oCAAgB,GAAxB,cAA4B,CAAC;IACtB,qCAAiB,GAAxB;QACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IACzE,CAAC;IACM,wCAAoB,GAA3B;QACE,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;IAC5E,CAAC;IACM,0BAAM,GAAb;QACE,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,EAAC,SAAS,EAAE,cAAc,EAAE,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,EAAC,SAAS,EAAE,QAAQ,EAAC,EAAC,EAAE;YAChH,GAAG,CAAC,KAAK,CAAC;gBACR,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBACvB,QAAQ,EAAE,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC3C,IAAI,EAAE,MAAM;gBACZ,WAAW,EAAE,OAAO;gBACpB,SAAS,EAAE,oBAAoB;aAChC,CAAC;YACF,GAAG,CAAC,KAAK,CAAC;gBACR,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,QAAQ;gBAC1B,QAAQ,EAAE,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC;gBAC9C,IAAI,EAAE,UAAU;gBAChB,WAAW,EAAE,UAAU;gBACvB,SAAS,EAAE,uBAAuB;aACnC,CAAC;YACF,GAAG,CAAC,MAAM,CAAC;gBACT,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,iBAAiB;aAC7B,EAAE,CAAC,OAAO,CAAC,CAAC;SACd,CAAC,CAAC;IACL,CAAC;IACH,gBAAC;AAAD,CAnDA,AAmDC,CAnDuB,KAAK,CAAC,SAAS,GAmDtC;AAED;kBAAe,KAAK,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC","file":"token/client/ReactCreateController.js","sourcesContent":["import * as React from 'react';\n\nvar dom = React.DOM;\nclass Component extends React.Component<any, any> {\n  public state = {\n    email: '',\n    password: ''\n  };\n  private handleLogin(event) {\n    this.props.service.createToken(\n      this.state.email,\n      this.state.password\n    ).then(function (token) {\n      this.props.onTokenChange(token);\n    }.bind(this), function (err) {\n      alert(err);\n    });\n    event.preventDefault();\n  }\n  private handleEmailChange(event) {\n    this.setState({email: event.target.value});\n  }\n  private handlePasswordChange(event) {\n    this.setState({password: event.target.value});\n  }\n  private handleDataChange() {}\n  public componentDidMount() {\n    this.props.service.addChangeListener(this.handleDataChange.bind(this));\n  }\n  public componentWillUnmount() {\n    this.props.service.removeChangeListener(this.handleDataChange.bind(this));\n  }\n  public render() {\n    return dom.form({className: 'token_create', onSubmit: this.handleLogin.bind(this), style: {textAlign: 'center'}}, [\n      dom.input({\n        value: this.state.email,\n        onChange: this.handleEmailChange.bind(this),\n        type: 'text',\n        placeholder: 'Email',\n        className: 'email form-control'\n      }),\n      dom.input({\n        value: this.state.password,\n        onChange: this.handlePasswordChange.bind(this),\n        type: 'password',\n        placeholder: 'Password',\n        className: 'password form-control'\n      }),\n      dom.button({\n        type: 'submit',\n        className: 'btn btn-success'\n      }, ['Login'])\n    ]);\n  }\n}\n\nexport default React.createFactory(Component);"],"sourceRoot":"/source/"}