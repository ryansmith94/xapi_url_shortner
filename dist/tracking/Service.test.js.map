{"version":3,"sources":["tracking/Service.test.ts"],"names":[],"mappings":"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","file":"tracking/Service.test.js","sourcesContent":["import BaseTest from '../BaseTest';\nimport Factory from './TestFactory';\nimport GroupFactory from '../group/TestFactory';\n\nvar LINK = {\n  id: 1,\n  long_url: 'http://www.example.com',\n  short_url: '1',\n  user_id: 1,\n  group_id: 1\n};\nvar ACTOR = {\n  account: {\n    homePage: 'http://www.example.com',\n    name: '1'\n  }\n};\nvar GROUP = {\n  name: 'Test group',\n  verb_id: 'http://www.example.com/verb_id',\n  verb_lang: 'en-GB',\n  verb_display: 'clicked'\n};\nvar CONTEXT = {\n  platform: 'Test'\n};\n\nclass Test extends BaseTest {\n  protected name: string = __filename;\n  protected service;\n  protected group_service;\n\n  public beforeEach() {\n    this.group_service = GroupFactory();\n    this.service = Factory();\n    this.service.setGroupService(this.group_service);\n  }\n\n  private assertStatement(statement) {\n    this.assert(LINK.long_url === statement.object.id);\n    this.assert('http://localhost:3000/' + LINK.short_url === statement.object.definition.moreInfo);\n    this.assert(LINK.long_url === statement.object.definition.name['en-GB']);\n    this.assert(String(LINK.user_id) === statement.context.instructor.account.name);\n    this.assert(GROUP.verb_id === statement.verb.id);\n    this.assert(!!statement.verb.display[GROUP.verb_lang]);\n    this.assert(GROUP.verb_display === statement.verb.display[GROUP.verb_lang]);\n  }\n\n  private createGroup() {\n    return this.group_service.createGroup(\n      GROUP.name,\n      GROUP.verb_id,\n      GROUP.verb_lang,\n      GROUP.verb_display\n    );\n  }\n\n  public testTrackLinkNoOptions() {\n    return this.createGroup().then((group) => {\n      LINK.group_id = group.id;\n      return this.service.trackLink(LINK, null);\n    }).then(this.assertStatement.bind(this));\n  }\n\n  public testTrackLinkWithActor() {\n    return this.createGroup().then((group) => {\n      LINK.group_id = group.id;\n      return this.service.trackLink(LINK, { actor: ACTOR });\n    }).then((statement) => {\n      this.assert(ACTOR === statement.actor);\n      this.assertStatement(statement);\n    });\n  }\n\n  public testTrackLinkWithContext() {\n    return this.createGroup().then((group) => {\n      LINK.group_id = group.id;\n      return this.service.trackLink(LINK, { context: CONTEXT });\n    }).then((statement) => {\n      this.assert(CONTEXT === statement.context);\n      this.assertStatement(statement);\n    });\n  }\n\n  public testTrackLinkWithActorAndContext() {\n    return this.createGroup().then((group) => {\n      LINK.group_id = group.id;\n      return this.service.trackLink(LINK, { actor: ACTOR, context: CONTEXT });\n    }).then((statement) => {\n      this.assert(ACTOR === statement.actor);\n      this.assert(CONTEXT === statement.context);\n      this.assertStatement(statement);\n    });\n  }\n}\n\n(new Test()).run();\nexport default Test;"],"sourceRoot":"/source/"}