{"version":3,"sources":["user/TestRepository.ts"],"names":[],"mappings":"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","file":"user/TestRepository.js","sourcesContent":["import * as q from 'q';\n\nclass Repository {\n  private users: Array<any> = [];\n\n  public createUser(user) {\n    user.id = this.users.length + 1;\n    this.users.push(user);\n    return q(user);\n  }\n\n  public getUserByEmail(email: string) {\n    var deferred = q.defer();\n    var filtered_users = this.users.filter(function (user) {\n      return user.email === email;\n    });\n\n    if (filtered_users.length > 0) {\n      deferred.resolve(filtered_users[0]);\n    } else {\n      deferred.reject(new Error('No user'));\n    }\n\n    return deferred.promise;\n  }\n\n  public getUserById(id) {\n    var deferred = q.defer();\n    var filtered_users = this.users.filter(function (user) {\n      return user.id === id;\n    });\n\n    if (filtered_users.length > 0) {\n      deferred.resolve(filtered_users[0]);\n    } else {\n      deferred.reject(new Error('No user'));\n    }\n\n    return deferred.promise;\n  }\n\n  public deleteUserById(id) {\n    var deferred = q.defer();\n    var filtered_users = this.users.filter(function (user, index) {\n      user.index = index;\n      return user.id === id;\n    });\n\n    if (filtered_users.length > 0) {\n      this.users = this.users.slice(0, filtered_users[0].index).concat(\n        this.users.slice(filtered_users[0].index + 1)\n      );\n      deferred.resolve(true);\n    } else {\n      deferred.reject(new Error('No user'));\n    }\n\n    return deferred.promise;\n  }\n\n  public getUsersByGroupId(group_id) {\n    var deferred = q.defer();\n    var filtered_users = this.users.filter(function (user) {\n      return user.group_id === group_id;\n    });\n\n    deferred.resolve(filtered_users);\n    return deferred.promise;\n  }\n\n  public deleteUsersByGroupId(group_id) {\n    var deferred = q.defer();\n    this.users = this.users.filter(function (user) {\n      return user.group_id !== group_id;\n    });\n\n    deferred.resolve(true);\n    return deferred.promise;\n  }\n\n  public updateUserById(id, user) {\n    var deferred = q.defer();\n    this.users = this.users.map((stored_user) => {\n      if (stored_user.id === id) {\n        return user;\n      } else {\n        return stored_user;\n      }\n    });\n\n    deferred.resolve(user);\n    return deferred.promise;\n  }\n}\n\nexport default Repository;"],"sourceRoot":"/source/"}