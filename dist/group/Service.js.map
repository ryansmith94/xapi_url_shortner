{"version":3,"sources":["group/Service.ts"],"names":[],"mappings":";;;;;;AAAA,4BAAwB,gBAAgB,CAAC,CAAA;AACzC,IAAY,CAAC,WAAM,GAAG,CAAC,CAAA;AAEvB;IAAsB,2BAAW;IAS/B,iBAAmB,UAAe;QAChC,iBAAO,CAAC;QACR,IAAI,CAAC,IAAI,GAAG,UAAU,CAAC;IACzB,CAAC;IAMM,gCAAc,GAArB,UAAsB,YAAiB;QACrC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAMM,gCAAc,GAArB,UAAsB,YAAiB;QACrC,IAAI,CAAC,YAAY,GAAG,YAAY,CAAC;IACnC,CAAC;IAUM,6BAAW,GAAlB,UAAmB,IAAY,EAAE,OAAgB,EAAE,SAAkB,EAAE,YAAqB;QAC1F,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC;YAC3B,IAAI,EAAE,IAAI;YACV,OAAO,EAAE,OAAO,IAAI,yCAAyC;YAC7D,SAAS,EAAE,SAAS,IAAI,IAAI;YAC5B,YAAY,EAAE,YAAY,IAAI,UAAU;SACzC,CAAC,CAAC;IACL,CAAC;IAOM,8BAAY,GAAnB,UAAoB,EAAU;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACpC,CAAC;IAMM,2BAAS,GAAhB;QACE,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;IAC/B,CAAC;IAOM,iCAAe,GAAtB,UAAuB,EAAE;QACvB,MAAM,CAAC,CAAC,CAAC,GAAG,CAAC;YACX,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,EAAE,CAAC;YAC1C,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC;SAC9B,CAAC,CAAC,IAAI,CAAC;YACN,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IACH,cAAC;AAAD,CA9EA,AA8EC,CA9EqB,qBAAW,GA8EhC;AAED;kBAAe,OAAO,CAAC","file":"group/Service.js","sourcesContent":["import BaseService from '../BaseService';\nimport * as q from 'q';\n\nclass Service extends BaseService {\n  private repo;\n  private user_service;\n  private link_service;\n\n  /**\n   * Constructs a new Group Service.\n   * @param {any} repository The group repository.\n   */\n  public constructor(repository: any) {\n    super();\n    this.repo = repository;\n  }\n\n  /**\n   * Sets the user service.\n   * @param {any} user_service The user service to be used.\n   */\n  public setUserService(user_service: any) {\n    this.user_service = user_service;\n  }\n\n  /**\n   * Sets the link service.\n   * @param {any} link_service Sets the link service to be used.\n   */\n  public setLinkService(link_service: any) {\n    this.link_service = link_service;\n  }\n\n  /**\n   * Creates a group with the given attribute values.\n   * @param {string} name The name of the group.\n   * @param {string} verb_id The verb identifier to use for tracking.\n   * @param {string} verb_lang The verb language to use for tracking.\n   * @param {string} verb_display The verb display to use for tracking.\n   * @return {Promise}\n   */\n  public createGroup(name: string, verb_id?: string, verb_lang?: string, verb_display?: string) {\n    return this.repo.createGroup({\n      name: name,\n      verb_id: verb_id || 'http://adlnet.gov/expapi/verbs/launched',\n      verb_lang: verb_lang || 'en',\n      verb_display: verb_display || 'launched'\n    });\n  }\n\n  /**\n   * Gets a group by its identifier.\n   * @param {string} id The identifier associated with the group.\n   * @return {Promise}\n   */\n  public getGroupById(id: string) {\n    return this.repo.getGroupById(id);\n  }\n\n  /**\n   * Gets groups.\n   * @return {Promise}\n   */\n  public getGroups() {\n    return this.repo.getGroups();\n  }\n\n  /**\n   * Deletes a group by its identifier.\n   * @param {string} id The identifier associated with the group.\n   * @return {Promise}\n   */\n  public deleteGroupById(id) {\n    return q.all([\n      this.user_service.deleteUsersByGroupId(id),\n      this.link_service.deleteLinksByGroupId(id),\n      this.repo.deleteGroupById(id)\n    ]).then(function() {\n      return true;\n    });\n  }\n}\n\nexport default Service;"],"sourceRoot":"/source/"}