{"version":3,"sources":["link/BaseService.ts"],"names":[],"mappings":"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","file":"link/BaseService.js","sourcesContent":["import BaseService from '../BaseService';\nimport url_regex from './UrlRegex';\nimport * as q from 'q';\n\nclass Service extends BaseService {\n  protected repo;\n\n  /**\n   * Constructs a new Service.\n   * @param {any} repository A repository.\n   */\n  public constructor(repository: any) {\n    super();\n    this.repo = repository;\n  }\n\n  /**\n   * Validates the given long_url and custom_url.\n   * @param {string} long_url The long_url to validate.\n   * @param {string} custom_url The custom_url to validate (optional).\n   * @return {Future}\n   */\n  public validateLink(long_url: string, custom_url?: string) {\n    var deferred = q.defer();\n\n    // Validates the long_url pattern.\n    if (!url_regex.test(long_url)) {\n      deferred.reject(new Error('Invalid Long URL'));\n    }\n\n    // Validates the custom_url pattern.\n    if (!/^[\\da-z]+$/.test(custom_url)) {\n      deferred.reject(new Error('Invalid Custom URL `'+custom_url+'`. It may only contain digits and lowercase letters.'));\n    }\n\n    // Checks that the custom_url doesn't exist already.\n    if (custom_url != undefined) {\n      this.getLinkByShortUrl(custom_url).then(function(link) {\n        deferred.reject(new Error('Custom URL already exists.'));\n      }, function(err) {\n        deferred.resolve(true);\n      });\n    } else {\n      deferred.resolve(true);\n    }\n\n    return deferred.promise;\n  }\n\n  /**\n   * Converts an id to a short_url.\n   * @param  {string} value The id to be converted.\n   * @return {string} short_url\n   */\n  protected idToShortUrl(value: string): string {\n    return parseInt(value, 10).toString(36);\n  }\n\n  /**\n   * Converts a short_url to an id.\n   * @param  {string} value The short_url to be converted.\n   * @return {string} id\n   */\n  private shortUrlToId(value: string): string {\n    return parseInt(value, 36).toString(10);\n  }\n\n  /**\n   * Gets a customised link by its id.\n   * @param {number} id The id to find.\n   * @return {Future}\n   */\n  protected getCustomLinkById(id) {\n    var short_url = this.idToShortUrl(id);\n    return this.getCustomLinkByShortUrl(short_url);\n  }\n\n  /**\n   * Gets a customised link by its short_url.\n   * @param {string} short_url The short_url to find.\n   * @return {Future}\n   */\n  private getCustomLinkByShortUrl(short_url: string) {\n    return this.repo.getCustomLinkByShortUrl(short_url);\n  }\n\n  /**\n   * Gets a link by its short_url.\n   * @param {string} short_url The short_url to find.\n   * @return {Future}\n   */\n  protected getLinkByShortUrl(short_url: string) {\n    return this.getCustomLinkByShortUrl(short_url).then(function (link) {\n      return link;\n    }.bind(this), function (err) {\n      // Converts the short_url to an id and searches by the id.\n      var id = this.shortUrlToId(short_url);\n      return this.getLinkById(id);\n    }.bind(this)).then(function (link) {\n      // Returns the custom_url as the short_url or the converted id as the short_url.\n      link.short_url = link.short_url || this.idToShortUrl(link.id);\n      return link;\n    }.bind(this));\n  }\n\n  /**\n   * Gets a link by its id.\n   * @param {number} id The id to find.\n   * @return {Future}\n   */\n  protected getLinkById(id) {\n    return this.repo.getLinkById(id);\n  }\n}\n\nexport default Service;"],"sourceRoot":"/source/"}