{"version":3,"sources":["link/TestRepository.ts"],"names":[],"mappings":"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","file":"link/TestRepository.js","sourcesContent":["import * as q from 'q';\n\nclass Repository {\n  private links: Array<any> = [];\n\n  public createLink(link) {\n    link.id = this.links.length + 1;\n    this.links.push(link);\n    return q(link);\n  }\n\n  public updateLink(link) {\n    var deferred = q.defer();\n    \n    if (this.links[link.id - 1]) {\n      this.links[link.id - 1] = link;\n      deferred.resolve(link);\n    } else {\n      deferred.reject(new Error('No link'));\n    }\n\n    return deferred.promise;\n  }\n\n  public getLinkById(id) {\n    var deferred = q.defer();\n    \n    if (this.links[id - 1]) {\n      deferred.resolve(this.links[id - 1]);\n    } else {\n      deferred.reject(new Error('No link'));\n    }\n\n    return deferred.promise;\n  }\n\n  public getCustomLinkByShortUrl(short_url: string) {\n    var deferred = q.defer();\n    var filtered_links = this.links.filter(function (link) {\n      return link.short_url === short_url;\n    });\n\n    if (filtered_links.length > 0) {\n      deferred.resolve(filtered_links[0]);\n    } else {\n      deferred.reject(new Error('No link'));\n    }\n\n    return deferred.promise;\n  }\n\n  public getLinks() {\n    return q(this.links);\n  }\n\n  public getLinksByGroupId(group_id) {\n    var filtered_links = this.links.filter(function (link) {\n      return link.group_id === group_id;\n    });\n\n    return q(filtered_links);\n  }\n\n  public deleteLinkById(id) {\n    var deferred = q.defer();\n    var filtered_links = this.links.filter(function (link, index) {\n      link.index = index;\n      return link.id === id;\n    });\n\n    if (filtered_links.length > 0) {\n      this.links = this.links.slice(0, filtered_links[0].index).concat(\n        this.links.slice(filtered_links[0].index + 1)\n      );\n      deferred.resolve(true);\n    } else {\n      deferred.reject(new Error('No link'));\n    }\n\n    return deferred.promise;\n  }\n\n  public deleteLinksByGroupId(group_id) {\n    var deferred = q.defer();\n    this.links = this.links.filter(function(link) {\n      return link.group_id !== group_id;\n    });\n    deferred.resolve(true);\n    return deferred.promise;\n  }\n\n  public changeLongUrl(id, long_url) {\n    let updated_link;\n    this.links = this.links.map((link) => {\n      if (link.id === id) {\n        link.long_url = long_url;\n        updated_link = link;\n      }\n      return link;\n    });\n    return q.resolve(updated_link);\n  }\n}\n\nexport default Repository;"],"sourceRoot":"/source/"}