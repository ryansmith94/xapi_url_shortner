{"version":3,"sources":["link/server/KnexRepository.ts"],"names":[],"mappings":";;;;;;AAAA,mCAA2B,0BAA0B,CAAC,CAAA;AAEtD;IAAyB,8BAAc;IAAvC;QAAyB,8BAAc;IAsDvC,CAAC;IApDQ,+BAAU,GAAjB,UAAkB,IAAI;QACpB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,IAAI,CAAC,UAAU,GAAG;YACzD,IAAI,CAAC,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,+BAAU,GAAjB,UAAkB,IAAI;QACpB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC;YAC3D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,gCAAW,GAAlB,UAAmB,EAAE;QACnB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI;YAC/D,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,4CAAuB,GAA9B,UAA+B,SAAiB;QAC9C,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC,KAAK,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI;YAC7E,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,sCAAiB,GAAxB,UAAyB,QAAQ;QAC/B,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IACpD,CAAC;IAEM,mCAAc,GAArB,UAAsB,EAAE;QACtB,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,UAAU,IAAI;YAChE,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;gBACV,MAAM,IAAI,KAAK,CAAC,SAAS,CAAC,CAAC;YAC7B,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,yCAAoB,GAA3B,UAA4B,QAAQ;QAClC,MAAM,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC;YAC9D,MAAM,CAAC,IAAI,CAAC;QACd,CAAC,CAAC,CAAC;IACL,CAAC;IACH,iBAAC;AAAD,CAtDA,AAsDC,CAtDwB,4BAAc,GAsDtC;AAED;kBAAe,UAAU,CAAC","file":"link/server/KnexRepository.js","sourcesContent":["import BaseRepository from '../../BaseKnexRepository';\n\nclass Repository extends BaseRepository {\n\n  public createLink(link) {\n    return this.connect().insert(link, 'id').then(function (ids) {\n      link.id = ids[0];\n      return link;\n    });\n  }\n\n  public updateLink(link) {\n    return this.connect().where('id', link.id).update(link).then(function () {\n      return link;\n    });\n  }\n\n  public getLinkById(id) {\n    return this.connect().where('id', id).first().then(function (link) {\n      if (!link) {\n        throw new Error('No link');\n      } else {\n        return link;\n      }\n    });\n  }\n\n  public getCustomLinkByShortUrl(short_url: string) {\n    return this.connect().where('short_url', short_url).first().then(function (link) {\n      if (!link) {\n        throw new Error('No link');\n      } else {\n        return link;\n      }\n    });\n  }\n\n  public getLinksByGroupId(group_id) {\n    return this.connect().where('group_id', group_id);\n  }\n\n  public deleteLinkById(id) {\n    return this.connect().where('id', id).delete().then(function (link) {\n      if (!link) {\n        throw new Error('No link');\n      } else {\n        return link;\n      }\n    });\n  }\n\n  public deleteLinksByGroupId(group_id) {\n    return this.connect().where('group_id', group_id).delete().then(function() {\n      return true;\n    });\n  }\n}\n\nexport default Repository;\n"],"sourceRoot":"/source/"}