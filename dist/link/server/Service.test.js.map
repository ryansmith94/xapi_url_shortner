{"version":3,"sources":["link/server/Service.test.ts"],"names":[],"mappings":"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","file":"link/server/Service.test.js","sourcesContent":["import BaseTest from '../BaseTest';\nimport Factory from './TestFactory';\nimport TrackingFactory from '../../tracking/TestFactory';\nimport GroupFactory from '../../group/TestFactory';\nimport UserFactory from '../../user/server/TestFactory';\n\nvar LONG_URL = 'http://www.example.com';\nvar SHORT_URL = '2';\nclass Test extends BaseTest {\n  protected name: string = __filename;\n  protected service;\n  protected group_service;\n  protected user_service;\n  protected tracking_service;\n\n  public beforeEach() {\n    // Initialises services.\n    this.tracking_service = TrackingFactory();\n    this.group_service = GroupFactory();\n    this.user_service = UserFactory();\n    this.service = Factory();\n\n    // Injects services into services.\n    this.user_service.setGroupService(this.group_service);\n    this.tracking_service.setGroupService(this.group_service);\n    this.service.setTrackingService(this.tracking_service);\n    this.service.setGroupService(this.group_service);\n    this.service.setUserService(this.user_service);\n  }\n\n  private createUser(id = '') {\n    var user_email = id+'test@example.com';\n    var user_pass = 'test_password';\n    var group_name = 'GROUP_NAME';\n    return this.group_service.createGroup(group_name).then((group) => {\n      return this.user_service.createUser(user_email, user_pass, group.id);\n    });\n  }\n\n  public testTrackLinkNoOptions() {\n    return this.createUser().then((user) => {\n      return this.service.createLink(LONG_URL, user.id);\n    }).then((link) => {\n      return this.service.trackLink(link.short_url);\n    }).then(() => null);\n  }\n\n  public testCreateLink() {\n    var user;\n    return this.createUser().then((created_user) => {\n      user = created_user;\n      return this.service.createLink(LONG_URL, user.id);\n    }).then((link) => {\n      this.assert(link.long_url === LONG_URL);\n      this.assert(link.user_id === user.id);\n    });\n  }\n\n  public testCreateLinkInvalidLongUrl() {\n    return this.createUser().then((user) => {\n      return this.service.createLink('', user.id);\n    }).then(this.fail(), this.pass());\n  }\n\n  public testCreateLinkWithShortUrl() {\n    return this.createUser().then((user) => {\n      return this.service.createLink(LONG_URL, user.id, SHORT_URL);\n    }).then((link) => {\n      this.assert(link.long_url === LONG_URL);\n      this.assert(link.short_url === SHORT_URL);\n    });\n  }\n\n  public testCreateLinkWithExistingShortUrl() {\n    return this.createUser().then((user) => {\n      return this.service.createLink(LONG_URL, user.id, '2').then((first_link) => {\n        return this.service.createLink(LONG_URL+'/2', user.id).then((second_link) => {\n          this.assert(second_link.short_url === String(first_link.id));\n        });\n      });\n    });\n  }\n\n  public testCreateLinkWithShortUrlOfExistingId() {\n    return this.createUser().then((user) => {\n      return this.service.createLink(LONG_URL, user.id).then((first_link) => {\n        return this.service.createLink(LONG_URL+'/2', user.id, ''+first_link.id).then(\n          this.fail(), this.pass()\n        );\n      });\n    });\n  }\n\n  public testGetLinks() {\n    return this.createUser().then((user) => {\n      return this.service.createLink(LONG_URL, user.id, '2').then((link) => {\n        return this.service.getLinks(user.id).then((links) => {\n          this.assert(Array.isArray(links));\n          this.assert(links.length === 1);\n          this.assert(links[0].id === link.id);\n          this.assert(links[0].long_url === link.long_url);\n          this.assert(links[0].short_url === link.short_url);\n        });\n      });\n    });\n  }\n\n  public testGetLinksFromOtherGroup() {\n    return this.createUser().then((user) => {\n      return this.service.createLink(LONG_URL, user.id);\n    }).then(() => {\n      return this.createUser('2');\n    }).then((user) => {\n      return this.service.getLinks(user.id);\n    }).then((links) => {\n      this.assert(Array.isArray(links));\n      this.assert(links.length === 0);\n    });\n  }\n\n  public testGetLinksWithIncorrectId() {\n    return this.service.getLinks(1).then(this.fail(), this.pass());\n  }\n\n  public testDeleteLinkById() {\n    var user;\n    return this.createUser().then((created_user) => {\n      user = created_user;\n      return this.service.createLink(LONG_URL, user.id);\n    }).then((link) => {\n      return this.service.deleteLinkById(link.id, user.id);\n    }).then(this.pass(), this.fail());\n  }\n\n  public testDeleteLinkByInvalidId() {\n    return this.createUser().then((user) => {\n      return this.service.deleteLinkById(1, user.id);\n    }).then(this.fail(), this.pass());\n  }\n\n  public testDeleteLinkByIdWithInvalidUser() {\n    var link;\n    return this.createUser().then((user) => {\n      return this.service.createLink(LONG_URL, user.id);\n    }).then((created_link) => {\n      link = created_link;\n      return this.createUser('2');\n    }).then((user) => {\n      return this.service.deleteLinkById(link.id, user.id);\n    }).then(this.fail(), this.pass());\n  }\n\n  public testDeleteLinksByGroupId() {\n    var user;\n    var user_email = 'test@example.com';\n    var user_pass = 'test_password';\n\n    return this.createUser().then((created_user) => {\n      user = created_user;\n      return this.service.createLink(LONG_URL, user.id);\n    }).then((link) => {\n      return this.service.deleteLinksByGroupId(link.group_id);\n    }).then(() => {\n      return this.service.getLinks(user.id);\n    }).then((links) => {\n      this.assert(links.length === 0);\n    });\n  }\n\n  public testDeleteLinksByInvalidGroupId() {\n    return this.service.deleteLinksByGroupId(1).then(this.fail(), this.pass());\n  }\n\n  public testChangeLongUrl() {\n    let user, link;\n    const NEW_LONG_URL = LONG_URL + '/hello';\n    let assertUpdated = (updated_link) => {\n      this.assert(updated_link.id === link.id);\n      this.assert(updated_link.long_url === NEW_LONG_URL);\n      this.assert(updated_link.short_url === link.short_url);\n      this.assert(updated_link.user_id === user.id);\n      this.assert(updated_link.group_id === user.group_id);\n    };\n\n    return this.createUser().then((created_user) => {\n      user = created_user;\n      return this.service.createLink(LONG_URL, user.id);\n    }).then((created_link) => {\n      link = created_link;\n      return this.service.changeLongUrl(link.id, NEW_LONG_URL, user.id);\n    }).then((updated_link) => {\n      assertUpdated(updated_link);\n      return this.service.getLinkById(link.id, user.id);\n    }).then((updated_link) => {\n      assertUpdated(updated_link);\n    });\n  }\n\n  public testChangeLongUrlWithInvalidId() {\n    const NEW_LONG_URL = LONG_URL + '/hello';\n    return this.createUser().then((user) => {\n      return this.service.changeLongUrl(1, NEW_LONG_URL, user.id);\n    }).then(this.fail(), this.pass());\n  }\n\n  public testChangeLongUrlWithInvalidLongUrl() {\n    let user;\n    const NEW_LONG_URL = '';\n    return this.createUser().then((created_user) => {\n      user = created_user;\n      return this.service.createLink(LONG_URL, user.id);\n    }).then((link) => {\n      return this.service.changeLongUrl(link.id, NEW_LONG_URL, user.id);\n    }).then(this.fail(), this.pass());\n  }\n\n  public testChangeLongUrlWithInvalidUserId() {\n    const NEW_LONG_URL = '';\n    return this.createUser().then((user) => {\n      return this.service.createLink(LONG_URL, user.id);\n    }).then((link) => {\n      return this.service.changeLongUrl(link.id, NEW_LONG_URL, 100);\n    }).then(this.fail(), this.pass());\n  }\n}\n\n(new Test()).run();\nexport default Test;"],"sourceRoot":"/source/"}