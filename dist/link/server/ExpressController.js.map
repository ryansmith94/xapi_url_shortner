{"version":3,"sources":["link/server/ExpressController.ts"],"names":[],"mappings":"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","file":"link/server/ExpressController.js","sourcesContent":["class Controller {\n  private service;\n  private token_service;\n\n  public constructor(app, service, token_service) {\n    this.service = service;\n    this.token_service = token_service;\n    this.constructRoutes(app);\n  }\n\n  private constructRoutes(app) {\n    app.post('/api/link', this.createLink.bind(this));\n    app.get('/api/link', this.getLinks.bind(this));\n    app.delete('/api/link/:id', this.deleteLink.bind(this));\n    app.put('/api/link/:id', this.changeLongUrl.bind(this));\n    app.get('/:short_url(\\\\w+)', this.visitLink.bind(this));\n  }\n\n  public createLink(req, res) {\n    var token = req.get('Authorization').replace('Bearer ', '');\n    this.token_service.getUserByValue(token).then((user_id: number) => {\n      return this.service.createLink(\n        req.body.long_url,\n        user_id,\n        req.body.short_url\n      );\n    }).then(function (model) {\n      res.json(model);\n    }, function (err) {\n      console.error(err.stack);\n      res.status(400).send(String(err));\n    });\n  }\n\n  public visitLink(req, res) {\n    var options = req.query.options;\n    this.service.trackLink(req.params.short_url, options && JSON.parse(options)).then(function (model) {\n      res.redirect(307, model.long_url);\n    }, function (err) {\n      console.error(err.stack);\n      res.status(400).send(String(err));\n    });\n  }\n\n  public getLinks(req, res) {\n    var token = req.get('Authorization').replace('Bearer ', '');\n    this.token_service.getUserByValue(token).then((user_id: number) => {\n      return this.service.getLinks(user_id);\n    }).then(function (models) {\n      res.json(models);\n    }, function (err) {\n      console.error(err.stack);\n      res.status(400).send(String(err));\n    });\n  }\n\n  public deleteLink(req, res) {\n    var token = req.get('Authorization').replace('Bearer ', '');\n    var id = req.params.id;\n    this.token_service.getUserByValue(token).then((user_id: number) => {\n      return this.service.deleteLinkById(id, user_id);\n    }).then(function () {\n      res.json(true);\n    }, function (err) {\n      console.error(err.stack);\n      res.status(400).send(String(err));\n    });\n  }\n\n  public changeLongUrl(req, res) {\n    var token = req.get('Authorization').replace('Bearer ', '');\n    var id = req.params.id;\n    this.token_service.getUserByValue(token).then((user_id: number) => {\n      console.log('log', user_id);\n      return this.service.changeLongUrl(id, req.body.long_url, user_id);\n    }).then(function() {\n      res.json(true);\n    }, function(err) {\n      console.error(err.stack);\n      res.status(400).send(String(err));\n    });\n  }\n}\n\nexport default Controller;"],"sourceRoot":"/source/"}