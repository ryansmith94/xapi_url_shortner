{"version":3,"sources":["link/server/Service.ts"],"names":[],"mappings":"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","file":"link/server/Service.js","sourcesContent":["import BaseService from '../BaseService';\nimport * as q from 'q';\n\nclass Service extends BaseService {\n  private tracking_service;\n  private user_service;\n  private group_service;\n\n  /**\n   * Sets the tracking service.\n   * @param {any} tracking_service A tracking service.\n   */\n  public setTrackingService(tracking_service) {\n    this.tracking_service = tracking_service;\n  }\n\n  /**\n   * Sets the user service.\n   * @param {any} user_service A user service.\n   */\n  public setUserService(user_service) {\n    this.user_service = user_service;\n  }\n\n  /**\n   * Sets the group service.\n   * @param {any} group_service A token service.\n   */\n  public setGroupService(group_service) {\n    this.group_service = group_service;\n  }\n\n  /**\n   * Tracks a link.\n   * @param {string} short_url The short_url to track.\n   * @param {any} tracking_options The options to be used by the tracking service.\n   */\n  public trackLink(short_url: string, tracking_options?) {\n    return this.getLinkByShortUrl(short_url).then((link) => {\n      this.tracking_service.trackLink(link, tracking_options);\n      return link;\n    });\n  }\n\n  /**\n   * Creates a new link.\n   * @param {string} long_url The long_url to be used.\n   * @param {number} user_id The user creating the link.\n   * @param {string} custom_url The custom_url to be used (optional).\n   * @return {Future}\n   */\n  public createLink(long_url: string, user_id: number, custom_url?: string) {\n    return this.validateLink(long_url, custom_url).then(() => {\n      return this.user_service.getUserById(user_id);\n    }).then((user) => {\n      return this.repo.createLink({\n        long_url: long_url,\n        short_url: custom_url,\n        group_id: user.group_id,\n        user_id: user.id\n      });\n    }).then((link) => {\n      link.owner = true;\n      return this.getCustomLinkById(link.id).then((custom_link) => {\n        link.short_url = this.idToShortUrl(custom_link.id);\n        return this.repo.updateLink(link).then((link) => {\n          this.emitChange();\n          return link;\n        });\n      }, (err) => {\n        link.short_url = link.short_url || this.idToShortUrl(link.id);\n        this.emitChange();\n        return link;\n      });\n    });\n  }\n\n  /**\n   * Gets links.\n   * @param {number} user_id The user creating the link.\n   * @return {Future}\n   */\n  public getLinks(user_id: number) {\n    var user;\n    return this.user_service.getUserById(user_id).then((token_user) => {\n      user = token_user;\n      return this.repo.getLinksByGroupId(user.group_id);\n    }).then((links) => {\n      return links.map((link) => {\n        return {\n          id: link.id,\n          long_url: link.long_url,\n          short_url: link.short_url || this.idToShortUrl(link.id),\n          editable: link.user_id == user.id || (!!user.admin),\n          user_id: link.user_id,\n          group_id: link.group_id\n        };\n      });\n    });\n  }\n\n  /**\n   * Deletes a link by ID if able to with the given token.\n   * @param {string} id The ID of the link to delete.\n   * @param {number} user_id The user creating the link.\n   * @return {Future}\n   */\n  public deleteLinkById(id, user_id: number) {\n    return q.all([\n      this.user_service.getUserById(user_id),\n      this.repo.getLinkById(id)\n    ]).spread((user, link) => {\n      if (link.user_id == user.id) {\n        this.repo.deleteLinkById(link.id);\n        return true;\n      } else {\n        throw new Error('Link cannot be deleted by that user');\n      }\n    });\n  }\n\n  /**\n   * Deletes links by group ID.\n   * @param {number} group_id The ID of the group.\n   * @return {Future}\n   */\n  public deleteLinksByGroupId(group_id: number) {\n    return this.group_service.getGroupById(group_id).then(() => {\n      return this.repo.deleteLinksByGroupId(group_id);\n    });\n  }\n\n  /**\n   * Changes the long_url of a link.\n   * @param {number} id Identifer associated with the link.\n   * @param {string} long_url The new long_url\n   * @param {number} user_id Identifier associated with the user updating the link.\n   * @return {Promise}\n   */\n  public changeLongUrl(id: number, long_url: string, user_id: number) {\n    return this.validateLink(long_url).then(() => {\n      return this.getLinkById(id);\n    }).then((link) => {\n      if (user_id != link.user_id) throw new Error('Link cannot be modified by that user');\n      link.long_url = long_url;\n      return this.repo.updateLink(link);\n    });\n  }\n}\n\nexport default Service;"],"sourceRoot":"/source/"}