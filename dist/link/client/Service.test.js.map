{"version":3,"sources":["link/client/Service.test.ts"],"names":[],"mappings":"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","file":"link/client/Service.test.js","sourcesContent":["import BaseTest from '../BaseTest';\nimport Factory from './TestFactory';\nimport TestRepository from '../TestRepository';\n\nvar LONG_URL = 'http://www.example.com';\nvar SHORT_URL = '2';\nclass Test extends BaseTest {\n  protected name: string = __filename;\n  protected service;\n\n  public beforeEach() {\n    this.service = Factory();\n  }\n\n  public testCreateLink() {\n    return this.service.createLink(LONG_URL).then((link: any) => {\n      this.assert(link.long_url === LONG_URL);\n    });\n  }\n\n  public testCreateLinkInvalidLongUrl() {\n    return this.service.createLink('').then(this.fail(), this.pass());\n  }\n\n  public testCreateLinkWithShortUrl() {\n    return this.service.createLink(LONG_URL, SHORT_URL).then((link: any) => {\n      this.assert(link.long_url === LONG_URL);\n      this.assert(link.short_url === SHORT_URL);\n    });\n  }\n\n  public testCreateLinkWithInvalidShortUrl() {\n    return this.service.createLink(LONG_URL, 'AAA').then(this.fail(), this.pass());\n  }\n\n  public testCreateLinkWithShortUrlOfExistingId() {\n    return this.service.createLink(LONG_URL).then((first_link) => {\n      return this.service.createLink(LONG_URL + '/2', '1');\n    }).then(this.fail(), this.pass());\n  }\n\n  public testGetLinks() {\n    return this.service.createLink(LONG_URL, '2').then((link: any) => {\n      return this.service.getLinks().then((links) => {\n        this.assert(Array.isArray(links));\n        this.assert(links.length === 1);\n        this.assert(links[0].id === link.id);\n        this.assert(links[0].long_url === link.long_url);\n        this.assert(links[0].short_url === link.short_url);\n      });\n    });\n  }\n\n  public testDeleteLinkById() {\n    return this.service.createLink(LONG_URL).then((link: any) => {\n      return this.service.deleteLinkById(link.id);\n    }).then(this.pass(), this.fail());\n  }\n\n  public testDeleteLinkByInvalidId() {\n    return this.service.deleteLinkById(1).then(this.fail(), this.pass());\n  }\n\n  public testChangeLongUrl() {\n    let user, link;\n    const NEW_LONG_URL = LONG_URL + '/hello';\n    let assertUpdated = (updated_link) => {\n      this.assert(updated_link.id === link.id);\n      this.assert(updated_link.long_url === NEW_LONG_URL);\n      this.assert(updated_link.short_url === link.short_url);\n    };\n\n    return this.service.createLink(LONG_URL).then((created_link) => {\n      link = created_link;\n      return this.service.changeLongUrl(link.id, NEW_LONG_URL);\n    }).then((updated_link) => {\n      assertUpdated(updated_link);\n      return this.service.getLinkById(link.id);\n    }).then((updated_link) => {\n      assertUpdated(updated_link);\n    });\n  }\n}\n\n(new Test()).run();\nexport default Test;"],"sourceRoot":"/source/"}