{"version":3,"sources":["client.ts"],"names":[],"mappings":";AAAA,IAAY,KAAK,WAAM,OAAO,CAAC,CAAA;AAC/B,oBAAgB,OAAO,CAAC,CAAA;AAGxB,wBAAwB,uBAAuB,CAAC,CAAA;AAChD,gCAA2B,+BAA+B,CAAC,CAAA;AAG3D,wBAAyB,wBAAwB,CAAC,CAAA;AAClD,sCAAkC,sCAAsC,CAAC,CAAA;AACzE,IAAI,aAAa,GAAG,iBAAY,CAAC,WAAW,CAAC,CAAC;AAG9C,wBAAwB,uBAAuB,CAAC,CAAA;AAChD,sCAA2B,qCAAqC,CAAC,CAAA;AAEjE,IAAI,kBAAkB,GAAG,UAAU,KAAK,EAAE,aAAa,EAAE,KAAK;IAC5D,IAAI,OAAO,CAAC;IAEZ,EAAE,CAAC,CAAC,KAAK,IAAI,KAAK,KAAK,QAAQ,CAAC,CAAC,CAAC;QAChC,IAAI,YAAY,GAAG,iBAAW,CAAC,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACxD,OAAO,GAAG,CAAC,+BAAc,CAAC;gBACxB,OAAO,EAAE,YAAY;aACtB,CAAC,CAAC,CAAC;IACN,CAAC;IAAC,IAAI,CAAC,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACjB,IAAI,YAAY,GAAG,iBAAW,CAAC,UAAU,EAAE,KAAK,CAAC,KAAK,CAAC,CAAC;QACxD,OAAO,GAAG,CAAC,yBAAc,CAAC;gBACxB,OAAO,EAAE,YAAY;aACtB,CAAC,CAAC,CAAC;IACN,CAAC;IAAC,IAAI,CAAC,CAAC;QACN,OAAO,GAAG,CAAC,+BAAqB,CAAC;gBAC/B,OAAO,EAAE,aAAa;gBACtB,aAAa,EAAE,aAAa;aAC7B,CAAC,CAAC,CAAC;IACN,CAAC;IAED,MAAM,CAAC,OAAO,CAAC;AACjB,CAAC,CAAC;AAEF,KAAK,CAAC,MAAM,CAAC,aAAG,CAAC;IACf,kBAAkB,EAAE,kBAAkB;CACvC,CAAC,EAAE,QAAQ,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC","file":"client.js","sourcesContent":["import * as React from 'react';\nimport App from './App';\n\n// Link.\nimport LinkFactory from './link/client/Factory';\nimport LinkController from './link/client/ReactController';\n\n// Token.\nimport TokenFactory from './token/client/Factory';\nimport TokenCreateController from './token/client/ReactCreateController';\nvar token_service = TokenFactory('api/token');\n\n// User.\nimport UserFactory from './user/client/Factory';\nimport UserController from './user/client/ReactCreateController';\n\nvar content_controller = function (token, onTokenChange, route) {\n  var content;\n\n  if (token && route === 'invite') {\n    var user_service = UserFactory('api/user', token.value);\n    content = [UserController({\n      service: user_service\n    })];\n  } else if (token) {\n    var link_service = LinkFactory('api/link', token.value);\n    content = [LinkController({\n      service: link_service\n    })];\n  } else {\n    content = [TokenCreateController({\n      service: token_service,\n      onTokenChange: onTokenChange\n    })];\n  }\n\n  return content;\n};\n\nReact.render(App({\n  content_controller: content_controller\n}), document.getElementById('app'));"],"sourceRoot":"/source/"}